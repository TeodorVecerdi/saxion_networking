using System.Collections.Generic;
using UnityEngine;

/**
 * This is a test class only there to demonstrate how you can add/remove/etc avatars.
 * It is accessed from the TestUI.
 * 
 * In the final product, adding, moving, removing etc your avatars should be controlled 
 * completely by both the server and the ChatLobbyClient.
 */
public class AvatarAreaManagerTester : MonoBehaviour
{
    [Tooltip("How far away from the center of the scene will we spawn avatars?")]
    public float spawnRange = 10;
    [Tooltip("What is the minimum angle from the center we are spawning the avatar at?")]
    public float spawnMinAngle = 0;
    [Tooltip("What is the maximum angle from the center we are spawning the avatar at?")]
    public float spawnMaxAngle = 180;

    //keep track of the last avatar id to make sure these id's are unique
    private int _lastAvatarId = 0;

    private AvatarAreaManager _avatarAreaManager;

    private void Start()
    {
        _avatarAreaManager = FindObjectOfType<AvatarAreaManager>();
        _avatarAreaManager.OnAvatarAreaClicked += MoveRandomAvatarToPosition;
    }

    /**
     * Demonstrates how to create an Avatar with some id.
     */
    public void AddRandomAvatar()
    {
        //Note that normally you would use an id generated by the server, but now we use an ever increasing ID
        int avatarId = _lastAvatarId++;
        AvatarView avatarView = _avatarAreaManager.AddAvatarView(avatarId);
        avatarView.transform.localPosition = getRandomPosition();

        //set a random skin
        avatarView.SetSkin(Random.Range(0, 1000));
    }

    /**
     * Demonstrates how to move an Avatar with some id.
     */
    public void MoveRandomAvatar()
    {
        MoveRandomAvatarToPosition(getRandomPosition());
    }

    public void MoveRandomAvatarToPosition(Vector3 pPosition)
    {
        int randomAvatarId = getRandomAvatorId();
        if (randomAvatarId == -1) return;

        AvatarView avatarView = _avatarAreaManager.GetAvatarView(randomAvatarId);
        avatarView.Move(pPosition);
    }

    public void SkinRandomAvatar()
    {
        int randomAvatarId = getRandomAvatorId();
        if (randomAvatarId == -1) return;

        AvatarView avatarView = _avatarAreaManager.GetAvatarView(randomAvatarId);
        avatarView.SetSkin (Random.Range(0,100));
    }

    public void RemoveRandomAvatar()
    {
        int randomAvatarId = getRandomAvatorId();
        if (randomAvatarId == -1) return;

        _avatarAreaManager.RemoveAvatarView(randomAvatarId);
    }

    public void SaySomethingThroughRandomAvatar()
    {
        int randomAvatarId = getRandomAvatorId();
        if (randomAvatarId == -1) return;

        string[] randomText =
        {
            "Wazzaaaap?!",
            "Helloooo!",
            "Wanna play a game?",
            "Who are you?",
            "Where is everyone?",
            "BEHIND YOU!",
            "That's a pretty GREAT axe you got there!",
            "Oh no u didn't!",
            "How many <color=\"blue\">half-elves</color> does it take to screw in a light bulb?@Just one. Turns out, they're actually good for something!",
            "I'm like a MAGIC missile!@I just keep gettin' fired!",
            "I rolled a 20, but the DM said no.",
            "GAWD damnit! I stubbed my toe.@Whose pebble is this?@It's yours isn't it?@Hmmprf..."
        };

        string[] texts = randomText[Random.Range(0, randomText.Length)].Split('@');
        foreach (string text in texts) _avatarAreaManager.GetAvatarView(randomAvatarId).Say(text);
    }

    /**
     * Returns a position somewhere in town.
     */
    private Vector3 getRandomPosition()
    {
        //set a random position
        float randomAngle = Random.Range(spawnMinAngle, spawnMaxAngle) * Mathf.Deg2Rad;
        float randomDistance = Random.Range(0, spawnRange);
        return new Vector3(Mathf.Cos(randomAngle), 0, Mathf.Sin(randomAngle)) * randomDistance;
    }

    /**
     * Returns a list of all valid avatars so you can pick one you know that exists.
     */
    private int getRandomAvatorId()
    {
        List<int> allAvatarIds = _avatarAreaManager.GetAllAvatarIds();
        if (allAvatarIds.Count == 0) return -1;

        int randomAvatarId = allAvatarIds[Random.Range(0, allAvatarIds.Count)];
        return randomAvatarId;

    }
}
